"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FastifyBree = void 0;
const bree_1 = __importDefault(require("bree"));
const fastify_plugin_1 = __importDefault(require("fastify-plugin"));
const fs = __importStar(require("fs"));
const plugin_1 = require("./plugin");
function isTSNode(options) {
    var _a;
    return (_a = options === null || options === void 0 ? void 0 : options.ts) !== null && _a !== void 0 ? _a : !!process[Symbol.for('ts-node.register.instance')];
}
const plugin = async function (fastify, options) {
    const opt = Object.assign({ customOptions: {}, autoStart: true, autoClose: true }, options);
    const { customOptions, autoStart, autoClose } = opt;
    if (typeof customOptions.root === 'string') {
        await fs.promises.mkdir(customOptions.root, { recursive: true });
    }
    const defaultOption = {
        root: false,
        silenceRootCheckError: true,
        jobs: []
    };
    const o = { ...defaultOption, ...customOptions };
    if (typeof o.logger !== 'object') {
        o.logger = fastify.log.child({ plugin: 'fastify-bree' });
    }
    if (isTSNode())
        bree_1.default.extend(plugin_1.BreeTS);
    const bree = new bree_1.default(o);
    fastify.decorate('bree', bree);
    if (autoStart) {
        fastify.addHook('onReady', async function () { await bree.start(); });
    }
    if (autoClose) {
        fastify.addHook('onClose', async function () { await bree.stop(); });
    }
};
exports.FastifyBree = (0, fastify_plugin_1.default)(plugin, {
    fastify: '4.x',
    name: 'fastify-bree',
    dependencies: []
});
exports.default = exports.FastifyBree;
//# sourceMappingURL=index.js.map